package com.allianz.imdc.transaction.util;

import java.util.ArrayList;
import java.util.List;

import com.allianz.imdc.transaction.common.ErrorCode;
import com.allianz.imdc.transaction.common.SeverityLevel;
import com.allianz.imdc.transaction.dto.Error;
import com.allianz.imdc.transaction.dto.ErrorDetail;
import com.allianz.imdc.transaction.dto.ResponseDTO;

public class GenerateResponse {

	// Constructors
	//////////////////
	private GenerateResponse() {

	}

	/**
	 * This is used for set the result in the success response DTO
	 * 
	 * @param restult
	 * @param Status
	 * @return responseDTO
	 */
	@SuppressWarnings({ "rawtypes", "unchecked" })
	public static <T> ResponseDTO<T> getSuccessResponse(Object result) {
		ResponseDTO responseDTO = new ResponseDTO<>();
		responseDTO.setData(result);
		return responseDTO;
	}

	/**
	 * This is used for set the result in the response DTO
	 * 
	 * @param restult
	 * @param Status
	 * @return responseDTO
	 */
	@SuppressWarnings({ "rawtypes", "unchecked" })
	public static <T> ResponseDTO<T> getErrorResponse(Object result, Error error) {
		ResponseDTO responseDTO = new ResponseDTO<>();
		responseDTO.setError(error);
		responseDTO.setData(result);
		return responseDTO;
	}

	@SuppressWarnings({ "rawtypes", "unchecked" })
	public static <T> ResponseDTO<T> getIntServErrorResp(Object result, String errorDetails) {
		ResponseDTO responseDTO = new ResponseDTO<>();

		responseDTO.setData(result);
		responseDTO.setError(getError(ErrorCode.E1002.getCode(), ErrorCode.E1002.getDescription(), errorDetails,
				SeverityLevel.ERROR.getCode()));

		return responseDTO;
	}

	@SuppressWarnings({ "rawtypes", "unchecked" })
	public static <T> ResponseDTO<T> getBadReqErrorResp(Object result, String errorDetails) {
		ResponseDTO responseDTO = new ResponseDTO<>();

		responseDTO.setData(result);
		responseDTO.setError(getError(ErrorCode.E1001.getCode(), ErrorCode.E1001.getDescription(), errorDetails,
				SeverityLevel.ERROR.getCode()));

		return responseDTO;
	}

	private static Error getError(String code, String message, String detail, String severity) {
		Error error = new Error();
		List<ErrorDetail> errors = new ArrayList<>();
		ErrorDetail errorDetail = new ErrorDetail();
		errorDetail.setCode(code);
		errorDetail.setMessage(message);
		errorDetail.setDetail(detail);
		errorDetail.setSeverityLevel(severity);
		errors.add(errorDetail);
		error.setErrors(errors);
		return error;
	}
	
}