package com.allianz.imdc.transaction.exception;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;

import com.allianz.imdc.transaction.common.ErrorCode;
import com.allianz.imdc.transaction.controller.TransactionAppController;
import com.allianz.imdc.transaction.util.GenerateResponse;

@ControllerAdvice
public class GlobalExceptionHandler {

	private static final Logger logger = LogManager.getLogger(TransactionAppController.class);

	@ExceptionHandler(ResourceNotFoundException.class)
	public ResponseEntity<?> resourceNotFoundException(ResourceNotFoundException ex, WebRequest request) {
		return new ResponseEntity<>(GenerateResponse.getGenericErrorResp(ErrorCode.E1001.getCode(),
				ErrorCode.E1001.getDescription(), ex.getMessage()), HttpStatus.NOT_FOUND);
	}

	@ExceptionHandler(RecordNotFoundException.class)
	public ResponseEntity<?> recordNotFoundException(RecordNotFoundException ex, WebRequest request) {
		return new ResponseEntity<>(GenerateResponse.getGenericErrorResp(ErrorCode.E1002.getCode(),
				ErrorCode.E1002.getDescription(), ex.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);
	}

	@ExceptionHandler(Exception.class)
	public ResponseEntity<?> globleExcpetionHandler(Exception ex, WebRequest request) {
		logger.error("globleExcpetionHandler", ex);
		return new ResponseEntity<>(GenerateResponse.getIntServErrorResp(ex.getMessage()),
				HttpStatus.INTERNAL_SERVER_ERROR);
	}
}
